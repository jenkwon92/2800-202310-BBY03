<%- include("templates/header") %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css">

  <style>
    .selected-interest {
      display: inline-block;
      margin: 0 5px 5px 0;
      padding: 5px 10px;
      background-color: #b4cded;
      border-radius: 5px;
      font-weight: bolder;
    }
  
    .savedbtn {
      display: inline-block;
      margin: 0 5px 5px 0;
      padding: 5px 10px;
      background-color: #b4cded;
      border-radius: 5px;
      font-weight: bold;
      margin-left: 5px;
      color: #04327d;
    }
  
    .selected-interest .close {
      margin-left: 10px;
      cursor: pointer;
    }
  
    .multiselect-container.dropdown-menu {
      display: none !important;
      max-height: 200px;
      overflow-y: auto;
    }
  
    #selectedInterests {
      display: flex;
      flex-wrap: wrap;
    }
  
    .interest-container {
      display: inline-block;
    }
  </style>

  <div class="container">
    <div class="row">
      <div class="col">
        <h4 style="margin-top: 30px;">Edit Interests</h4>
        <div class="row">
          <div class="col" style="margin-top: 20px;">
            <div class="dropdown" style="margin-bottom:40px">
              <button
                style="width:100%; height: 50px; font-size: larger; background-color: #6D9DC5; color: white; font-weight: 600;"
                class="btn" type="button" id="multiSelectButton" data-bs-toggle="dropdown">
                Interests <i class="material-icons"
                  style="vertical-align: middle; margin-left: 180px;">keyboard_arrow_down</i>
              </button>
              <div class="dropdown-menu" aria-labelledby="multiSelectButton" style="width:100%;">
                <select id="multiSelect" multiple style="width:100%;">
                  <option value="php">PHP</option>
                  <option value="javascript">JavaScript</option>
                  <option value="java">Java</option>
                  <option value="React">React</option>
                  <option value="jquery">jQuery</option>
                  <option value="C++">C++</option>
                  <option value="R">R</option>
                  <option value="Python">Python</option>
                  <option value="HTML">HTML</option>
                  <option value="CSS">CSS</option>
                  <option value="MySQL">MySQL</option>
                  <option value="SQL">SQL</option>
                  <option value="MongoDB">MongoDB</option>
                  <option value="AI">AI</option>
                  <option value="Big Data">Big Data</option>
                  <option value="Django">Django</option>
                </select>
              </div>
            </div>
            <div id="interestSet1" class="border p-3 mt-3">
              <div id="selectedInterests">
                <% if (interests && interests.length> 0) { %>
                  <% interests.forEach(function(interest) { %>
                    <div class="interest-container">
                      <button type="button" class="btn btn-rounded savedbtn" style="margin-bottom: 8px;">
                        <%= interest %>
                      </button>
                      <span class="close" data-interest="<%= interest %>">&times;</span>
                    </div>
                    <% }); %>
                      <% } else { %>
                        <p>Update your interests</p>
                        <% } %>
              </div>
            </div>
            <button id="save-button" class="btn btn-sm btn-dark profile-button" type="submit"
              style="font-size: 15px; float: right; margin-top: 20px;">Save</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const select = new Choices('#multiSelect', {
        placeholder: true,
        placeholderValue: 'Select your interests',
        removeItemButton: true,
        maxItemCount: -1,
        classNames: {
          removeButton: 'choices__button choices__button--remove'
        }
      });

      const selectedInterests = document.querySelector('#selectedInterests');
      let interestsSet = new Set(); // Create a Set to store the selected interests

      // Function to add or remove the selected interests container
      function updateSelectedInterests() {
        const selectedInterestsContainer = document.querySelector('#selectedInterests');

        if (interestsSet.size > 0) {
          interestsSet.forEach(interest => {
            const interestContainer = document.createElement('div'); // 새로운 컨테이너 요소 생성
            interestContainer.className = 'interest-container';

            const savedButtonContainer = document.createElement('div'); // savedbtn을 감싸는 컨테이너 요소
            savedButtonContainer.style.display = 'inline-block'; // 가로 정렬을 위해 inline-block 스타일 적용

            const interestText = document.createTextNode(interest);
            const savedButton = document.createElement('button');
            savedButton.type = 'button';
            savedButton.className = 'btn btn-rounded savedbtn';
            savedButton.style.marginBottom = '8px';
            savedButton.style.marginTop = '8px';
            savedButton.textContent = interest;

            savedButtonContainer.appendChild(savedButton); // savedbtn을 컨테이너에 추가
            interestContainer.appendChild(savedButtonContainer); // 컨테이너를 interestContainer에 추가

            const closeButton = document.createElement('span');
            closeButton.className = 'close';
            closeButton.dataset.interest = interest;
            closeButton.innerHTML = '&times;';
            closeButton.addEventListener('click', removeInterest);

            interestContainer.appendChild(closeButton); // closeButton을 interestContainer에 추가

            selectedInterestsContainer.appendChild(interestContainer);

          });
        } else {
          const updateInterestsText = document.createElement('p');
          updateInterestsText.textContent = 'Update your interests';
          selectedInterestsContainer.appendChild(updateInterestsText);
        }

        // Add event listeners to existing buttons
        const existingButtons = selectedInterestsContainer.querySelectorAll('.savedbtn');
        existingButtons.forEach(button => {
          const closeButton = button.querySelector('.close');
          if (closeButton) {
            closeButton.addEventListener('click', removeInterest);
          }
        });
      }

      select.passedElement.element.addEventListener('change', function () {
        const selectedOptions = Array.from(this.selectedOptions);

        // Clear the interestsSet
        interestsSet.clear();

        selectedOptions.forEach(option => {
          interestsSet.add(option.value);
        });

        updateSelectedInterests();
      });

      const saveButton = document.querySelector('#save-button');
      saveButton.addEventListener('click', saveInterests);

      function saveInterests() {
        const interests = Array.from(interestsSet);

        if (interests.length === 0) {
          window.location.href = '/profile';
          return;
        }

        fetch('/saveInterests', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ interests }),
        })
          .then(response => {
            if (response.ok) {
              console.log('Interests saved successfully');
              window.location.href = '/profile';
            } else {
              throw new Error('Error saving interests');
            }
          })
          .catch(error => {
            console.error('Error saving interests:', error);
          });
      }

      function removeInterest(event) {
        const interest = event.currentTarget.dataset.interest;
        console.log('Removing interest:', interest);

        const interestContainer = event.currentTarget.closest('.interest-container');
        if (interestContainer !== null) {
          interestContainer.remove();

          fetch('/removeInterest', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ interest }),
          })
            .then(response => {
              if (response.ok) {
                console.log('Interest deleted successfully');
              } else {
                throw new Error('Failed to delete interest');
              }
            })
            .catch(error => {
              console.error('Error deleting interest:', error);
            });
        }
      }

      function updateDatabase() {
        console.log('Updating database');
      }

      // Event listener for click 
      const closeButtons = document.querySelectorAll('.close');
      closeButtons.forEach(button => {
        button.addEventListener('click', removeInterest);
      });
    });
  </script>

  <%- include("templates/footer") %>