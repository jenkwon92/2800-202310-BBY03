<%- include("templates/header") %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css">

<style>
  .selected-skill {
    display: inline-block;
    margin: 0 5px 5px 0;
    padding: 5px 10px;
    background-color: #e9ecef;
    border-radius: 5px;
  }

  .selected-skill .close {
    margin-left: 10px;
    cursor: pointer;
  }

  .multiselect-container.dropdown-menu {
    display: none !important;
    max-height: 200px;
    overflow-y: auto;
  }
</style>

<div class="container">
  <div class="row">
    <div class="col">
      <h4>Skills</h4>
      <div class="row">
        <div class="col">
          <div class="dropdown" style="margin-bottom:40px">
            <button style="width:80%;" class="btn btn-secondary dropdown-toggle" type="button" id="multiSelectButton"
              data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              Select your skills
            </button>
            <div class="dropdown-menu" aria-labelledby="multiSelectButton" style="width:100%;">
              <select id="multiSelect" multiple style="width:100%;">
                <option value="php">PHP</option>
                <option value="javascript">JavaScript</option>
                <option value="java">Java</option>
                <option value="React">React</option>
                <option value="jquery">jQuery</option>
                <option value="C++">C++</option>
                <option value="Python">Python</option>
                <option value="HTML">HTML</option>
                <option value="CSS">CSS</option>
                <option value="MySQL">MySQL</option>
                <option value="MongoDB">MongoDB</option>
              </select>
            </div>
          </div>
          <div id="skillSet1" class="border p-3 mt-3">
            <h4>Selected Skills</h4>
            <div id="selectedSkills">
              <% skills.forEach(skill => { %>
                <div class="selected-skill">
                  <span><%= skill.name %></span>
                  <span class="close" data-skill="<%= skill.name %>">&times;</span>
                </div>
              <% }) %>
            </div>
          </div>
          <button id="save-button" class="btn btn-sm btn-dark profile-button" type="submit"
            style="font-size: 15px; float: right; margin-top: 20px;">Save</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
  const select = new Choices('#multiSelect', {
    placeholder: true,
    placeholderValue: 'Select your skills',
    removeItemButton: true,
    maxItemCount: -1,
    allowHTML: true
  });

  const selectedSkills = document.querySelector('#selectedSkills');
  const skillSet1 = document.querySelector('#skillSet1');

  select.passedElement.element.addEventListener('change', function () {
    selectedSkills.innerHTML = '';
    const selectedOptions = Array.from(this.selectedOptions);
    selectedOptions.forEach(option => {
      const skillContainer = document.createElement('div');
      skillContainer.className = 'selected-skill';
      const skillText = document.createElement('span');
      skillText.textContent = option.text;

      const closeButton = document.createElement('span');
      closeButton.className = 'close';
      closeButton.innerHTML = '&times;';
      closeButton.addEventListener('click', function () {
        skillContainer.remove();
        select.removeActiveItemsByValue(option.value);
        saveSkills(); // Call saveSkills() after removing the skill
      });

      skillContainer.appendChild(skillText);
      skillContainer.appendChild(closeButton);

      selectedSkills.appendChild(skillContainer);
    });

    // Show or hide the skillSet1 div based on the selected skills
    if (selectedOptions.length > 0) {
      skillSet1.style.display = 'block';
    } else {
      skillSet1.style.display = 'none';
    }
  });

  // Remove skill when close button is clicked
  selectedSkills.addEventListener('click', function (event) {
    if (event.target.classList.contains('close')) {
      const skill = event.target.dataset.skill;
      const skillContainer = event.target.parentNode;
      skillContainer.remove();
      select.removeActiveItemsByValue(skill);
      saveSkills(); // Call saveSkills() after removing the skill
    }
  });

  const saveButton = document.querySelector('#save-button');
  saveButton.addEventListener('click', saveSkills);

  function saveSkills() {
    const selectedOptions = Array.from(select.getValue(false));
    const skills = selectedOptions.map(option => option.value).join(',');

    if (skills.trim() === '') {
      console.error('Skills data is missing');
      return;
    }

    const xhr = new XMLHttpRequest();
    xhr.open('POST', '/saveSkills');
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.onload = function () {
      if (xhr.status === 200) {
        console.log('Skills saved successfully');
        window.location.href = '/profile'; // redirect to the profile page
      } else {
        console.error('Error saving skills');
      }
    };
    xhr.send(JSON.stringify({ skills: skills })); // Send skills data as JSON object
  }
});
</script>

<%- include("templates/footer") %>